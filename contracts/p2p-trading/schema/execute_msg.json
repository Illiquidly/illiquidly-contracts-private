{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "create_trade"
      ],
      "properties": {
        "create_trade": {
          "type": "object",
          "properties": {
            "whitelisted_users": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "add_funds_to_trade"
      ],
      "properties": {
        "add_funds_to_trade": {
          "type": "object",
          "required": [
            "trade_id"
          ],
          "properties": {
            "confirm": {
              "type": [
                "boolean",
                "null"
              ]
            },
            "trade_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "add_cw20"
      ],
      "properties": {
        "add_cw20": {
          "type": "object",
          "required": [
            "address",
            "amount",
            "trade_id"
          ],
          "properties": {
            "address": {
              "type": "string"
            },
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "counter_id": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "trade_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "add_cw721"
      ],
      "properties": {
        "add_cw721": {
          "type": "object",
          "required": [
            "address",
            "token_id",
            "trade_id"
          ],
          "properties": {
            "address": {
              "type": "string"
            },
            "counter_id": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "token_id": {
              "type": "string"
            },
            "trade_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "remove_from_trade"
      ],
      "properties": {
        "remove_from_trade": {
          "type": "object",
          "required": [
            "assets",
            "funds",
            "trade_id"
          ],
          "properties": {
            "assets": {
              "type": "array",
              "items": {
                "type": "array",
                "items": [
                  {
                    "type": "integer",
                    "format": "uint16",
                    "minimum": 0.0
                  },
                  {
                    "$ref": "#/definitions/AssetInfo"
                  }
                ],
                "maxItems": 2,
                "minItems": 2
              }
            },
            "funds": {
              "type": "array",
              "items": {
                "type": "array",
                "items": [
                  {
                    "type": "integer",
                    "format": "uint16",
                    "minimum": 0.0
                  },
                  {
                    "$ref": "#/definitions/Coin"
                  }
                ],
                "maxItems": 2,
                "minItems": 2
              }
            },
            "trade_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "add_whitelisted_users"
      ],
      "properties": {
        "add_whitelisted_users": {
          "type": "object",
          "required": [
            "trade_id",
            "whitelisted_users"
          ],
          "properties": {
            "trade_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "whitelisted_users": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "remove_whitelisted_users"
      ],
      "properties": {
        "remove_whitelisted_users": {
          "type": "object",
          "required": [
            "trade_id",
            "whitelisted_users"
          ],
          "properties": {
            "trade_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "whitelisted_users": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Is used by the Trader to confirm they completed their end of the trade.",
      "type": "object",
      "required": [
        "confirm_trade"
      ],
      "properties": {
        "confirm_trade": {
          "type": "object",
          "required": [
            "trade_id"
          ],
          "properties": {
            "trade_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Can be used to initiate Counter Trade, but also to add new tokens to it",
      "type": "object",
      "required": [
        "suggest_counter_trade"
      ],
      "properties": {
        "suggest_counter_trade": {
          "type": "object",
          "required": [
            "trade_id"
          ],
          "properties": {
            "confirm": {
              "type": [
                "boolean",
                "null"
              ]
            },
            "trade_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "add_funds_to_counter_trade"
      ],
      "properties": {
        "add_funds_to_counter_trade": {
          "type": "object",
          "required": [
            "counter_id",
            "trade_id"
          ],
          "properties": {
            "confirm": {
              "type": [
                "boolean",
                "null"
              ]
            },
            "counter_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "trade_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "remove_from_counter_trade"
      ],
      "properties": {
        "remove_from_counter_trade": {
          "type": "object",
          "required": [
            "assets",
            "counter_id",
            "funds",
            "trade_id"
          ],
          "properties": {
            "assets": {
              "type": "array",
              "items": {
                "type": "array",
                "items": [
                  {
                    "type": "integer",
                    "format": "uint16",
                    "minimum": 0.0
                  },
                  {
                    "$ref": "#/definitions/AssetInfo"
                  }
                ],
                "maxItems": 2,
                "minItems": 2
              }
            },
            "counter_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "funds": {
              "type": "array",
              "items": {
                "type": "array",
                "items": [
                  {
                    "type": "integer",
                    "format": "uint16",
                    "minimum": 0.0
                  },
                  {
                    "$ref": "#/definitions/Coin"
                  }
                ],
                "maxItems": 2,
                "minItems": 2
              }
            },
            "trade_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Is used by the Client to confirm they completed their end of the trade.",
      "type": "object",
      "required": [
        "confirm_counter_trade"
      ],
      "properties": {
        "confirm_counter_trade": {
          "type": "object",
          "required": [
            "counter_id",
            "trade_id"
          ],
          "properties": {
            "counter_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "trade_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Accept the Trade plain and simple, swap it up !",
      "type": "object",
      "required": [
        "accept_trade"
      ],
      "properties": {
        "accept_trade": {
          "type": "object",
          "required": [
            "counter_id",
            "trade_id"
          ],
          "properties": {
            "counter_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "trade_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Cancel the Trade :/ No luck there mate ?",
      "type": "object",
      "required": [
        "cancel_trade"
      ],
      "properties": {
        "cancel_trade": {
          "type": "object",
          "required": [
            "trade_id"
          ],
          "properties": {
            "trade_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Cancel the Counter Trade :/ No luck there mate ?",
      "type": "object",
      "required": [
        "cancel_counter_trade"
      ],
      "properties": {
        "cancel_counter_trade": {
          "type": "object",
          "required": [
            "counter_id",
            "trade_id"
          ],
          "properties": {
            "counter_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "trade_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Refuse the Trade plain and simple, no madam, I'm not interested in your tokens !",
      "type": "object",
      "required": [
        "refuse_counter_trade"
      ],
      "properties": {
        "refuse_counter_trade": {
          "type": "object",
          "required": [
            "counter_id",
            "trade_id"
          ],
          "properties": {
            "counter_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "trade_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Some parts of the traded tokens were interesting, but you can't accept the trade as is",
      "type": "object",
      "required": [
        "review_counter_trade"
      ],
      "properties": {
        "review_counter_trade": {
          "type": "object",
          "required": [
            "counter_id",
            "trade_id"
          ],
          "properties": {
            "comment": {
              "type": [
                "string",
                "null"
              ]
            },
            "counter_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "trade_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "The fee contract can Withdraw funds via this function only when the trade is accepted.",
      "type": "object",
      "required": [
        "withdraw_pending_assets"
      ],
      "properties": {
        "withdraw_pending_assets": {
          "type": "object",
          "required": [
            "trade_id",
            "trader"
          ],
          "properties": {
            "trade_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "trader": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "You can Withdraw funds only at specific steps of the trade, but you're allowed to try anytime !",
      "type": "object",
      "required": [
        "withdraw_cancelled_trade"
      ],
      "properties": {
        "withdraw_cancelled_trade": {
          "type": "object",
          "required": [
            "trade_id"
          ],
          "properties": {
            "trade_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "You can Withdraw funds when your counter trade is aborted (refused or cancelled)",
      "type": "object",
      "required": [
        "withdraw_aborted_counter"
      ],
      "properties": {
        "withdraw_aborted_counter": {
          "type": "object",
          "required": [
            "counter_id",
            "trade_id"
          ],
          "properties": {
            "counter_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "trade_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "set_new_owner"
      ],
      "properties": {
        "set_new_owner": {
          "type": "object",
          "required": [
            "owner"
          ],
          "properties": {
            "owner": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "set_new_fee_contract"
      ],
      "properties": {
        "set_new_fee_contract": {
          "type": "object",
          "required": [
            "fee_contract"
          ],
          "properties": {
            "fee_contract": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "AssetInfo": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "cw20_coin"
          ],
          "properties": {
            "cw20_coin": {
              "$ref": "#/definitions/Cw20Coin"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "cw721_coin"
          ],
          "properties": {
            "cw721_coin": {
              "$ref": "#/definitions/Cw721Coin"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Coin": {
      "type": "object",
      "required": [
        "amount",
        "denom"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "denom": {
          "type": "string"
        }
      }
    },
    "Cw20Coin": {
      "type": "object",
      "required": [
        "address",
        "amount"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "amount": {
          "$ref": "#/definitions/Uint128"
        }
      }
    },
    "Cw721Coin": {
      "type": "object",
      "required": [
        "address",
        "token_id"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "token_id": {
          "type": "string"
        }
      }
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
